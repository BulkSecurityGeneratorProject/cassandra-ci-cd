#!/usr/bin/env groovy

node {
            stage('checkout') {
              checkout scm
            }

  
            stage('clean') {
			    
                sh "chmod 777 *"
                sh "./mvnw clean"
            }

            stage('install tools') {
			    
                sh "./mvnw com.github.eirslett:frontend-maven-plugin:install-node-and-yarn -DnodeVersion=v8.9.1 -DyarnVersion=v1.3.2"
            }

            stage('yarn install') {			    
                sh "./mvnw com.github.eirslett:frontend-maven-plugin:yarn"
            }

            stage('backend tests') {
			    
                try {
                    sh "chmod 777 *"
                    sh "./mvnw test"
                } catch(err) {
                    throw err
                } finally {
                    junit '**/target/surefire-reports/TEST-*.xml'
                }
            }

            stage('frontend tests') {
			   
                try {
                    sh "./mvnw com.github.eirslett:frontend-maven-plugin:yarn -Dfrontend.yarn.arguments=test"
                } catch(err) {
                    throw err
                } finally {
                    junit '**/target/test-results/karma/TESTS-*.xml'
                }
            }
         
		stage('Code Coverage') {
		    step([$class: 'JacocoPublisher', execPattern: 'target/test-results/coverage/jacoco/jacoco.exec'])
	    }

		 stage('package') {
		 	 	sh "set NODE_TLS_REJECT_UNAUTHORIZED=0"
		 	 	sh "npm config set strict-ssl false"
		 	 	sh "rm -R node && rm -R node_modules"
                sh "./mvnw  -Pprod package -DskipTests"
          }
		
			


	 stage('push To repo') {
	 	   sh "set NODE_TLS_REJECT_UNAUTHORIZED=0"
	 	   sh "npm config set strict-ssl false"
           sh "./mvnw -Pprod -DskipTests dockerfile:build dockerfile:push"
      }
		
	 stage('clean node installation') {
         sh "rm -R node && rm -R node_modules"
      }

    }

